{"version":3,"sources":["components/section/Section.js","components/container/Container.js","components/title/Title.js","components/form/Form.js","helpers/constants.js","components/filter/Filter.js","components/contacts/Contacts.js","helpers/dataGenerator.js","App.js","hooks/useLocalStorage.js","index.js"],"names":["Section","children","className","SectionWrapper","styled","section","Container","ContainerWrapper","div","Title","title","TitleH2","defaultProps","h2","Form","onSubmit","useState","name","setName","number","setNumber","handleInputChange","event","currentTarget","value","handleReset","MainForm","autoComplete","preventDefault","FormLabel","FormInput","type","placeholder","onChange","pattern","required","minLength","maxLength","FormAddContactButton","disabled","form","button","label","input","Filter","Label","Span","Input","p","span","Contacts","contacts","onDeleteButtonClick","map","person","ListItem","ButtonDelete","onClick","id","li","DataGenerator","data","nanoid","Math","floor","random","APP","key","defaultValue","serialize","JSON","stringify","deserialize","parse","window","localStorage","getItem","state","setState","useEffect","setItem","length","useLocalStorage","dataGenerator","contactsData","setContacts","filter","setFilter","validateContact","some","alert","filteredContacts","useMemo","lowerCaseFilter","toLowerCase","includes","getFiltredContacts","contact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9cb81a36.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nexport default function Section({ children, className }) {\n  return className ? (\n    <SectionWrapper className={className}> {children}</SectionWrapper>\n  ) : (\n    <SectionWrapper>{children}</SectionWrapper>\n  );\n}\n\nSection.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport const SectionWrapper = styled.section`\n  padding: 0 20px;\n  margin: 0;\n`;\n","import PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nexport default function Container({ children, className }) {\n  return className ? (\n    <ContainerWrapper className={className}>{children}</ContainerWrapper>\n  ) : (\n    <ContainerWrapper>{children}</ContainerWrapper>\n  );\n}\n\nContainer.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport const ContainerWrapper = styled.div`\n  padding: 0 10px;\n  margin: 0 auto;\n`;\n","import PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nexport default function Title({ title, className }) {\n  return className ? (\n    <TitleH2 className={className}>{title}</TitleH2>\n  ) : (\n    <TitleH2>{title}</TitleH2>\n  );\n}\n\nTitle.defaultProps = {\n  title: 'Section title',\n};\n\nTitle.propTypes = {\n  className: PropTypes.string,\n  title: PropTypes.string,\n};\n\nexport const TitleH2 = styled.h2`\n  color: var(--yellow);\n  font-size: 32px;\n  font-family: var(--big);\n  text-align: center;\n`;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Section from '../section';\nimport Container from '../container';\nimport Title from '../title';\nimport { NAME, NUMBER } from '../../helpers/constants';\n\nexport default function Form({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n\n    if (name === NAME) setName(value);\n    if (name === NUMBER) setNumber(value);\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n\n    onSubmit({ name, number });\n    handleReset();\n  };\n\n  const handleReset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Section>\n      <Container>\n        <Title title=\"Phonebook\" />\n        <MainForm autoComplete=\"off\" onSubmit={handleFormSubmit}>\n          <FormLabel>\n            Name\n            <FormInput\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              placeholder=\"Enter fullname\"\n              onChange={handleInputChange}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n          </FormLabel>\n\n          <FormLabel>\n            Number\n            <FormInput\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              placeholder=\"Enter phone number\"\n              onChange={handleInputChange}\n              minLength=\"7\"\n              maxLength=\"9\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n          </FormLabel>\n\n          <FormAddContactButton\n            type=\"submit\"\n            disabled={name === '' || number === ''}\n          >\n            Add contact\n          </FormAddContactButton>\n        </MainForm>\n      </Container>\n    </Section>\n  );\n}\n\nexport const MainForm = styled.form`\n  padding: 5px;\n  margin: 0 auto;\n  width: 250px;\n  font-family: var(--font);\n`;\n\nexport const FormAddContactButton = styled.button`\n  margin: 0;\n  width: 100%;\n  border: 1px solid rgb(255, 252, 252);\n  box-shadow: 0.7px 0.7px 0.75px rgb(173, 172, 172);\n  border-radius: 10px;\n  background-color: rgb(245, 250, 245);\n  padding: 5px 20px;\n\n  font-family: var(--font);\n  font-size: 14px;\n  font-weight: 600;\n  transition: all 250ms ease-in;\n\n  :hover {\n    cursor: pointer;\n    color: var(--white);\n    background-color: var(--green);\n    border: 1px solid var(--blue);\n  }\n\n  :disabled:hover {\n    cursor: not-allowed;\n    color: var(--red);\n    background-color: var(--white);\n    border: 1px solid var(--red);\n  }\n`;\n\nexport const FormLabel = styled.label`\n  margin: 0 0 2px 0;\n  font-family: var(--font);\n  font-size: 18px;\n  font-weight: 600;\n`;\n\nexport const FormInput = styled.input`\n  padding: 5px 20px;\n  margin-bottom: 20px;\n  width: 100%;\n  border-radius: 10px;\n`;\n","export const NAME = 'name';\r\nexport const NUMBER = 'number';\r\n","import styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { Fragment } from 'react';\n\nexport default function Filter({ value, onChange }) {\n  return (\n    <Fragment>\n      <Label>\n        <Title>\n          Find contacts by <Span>name</Span>\n        </Title>\n        <Input type=\"search\" name=\"search\" value={value} onChange={onChange} />\n      </Label>\n    </Fragment>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Title = styled.p`\n  margin: 5px 0;\n  color: var(--white);\n  font-family: var(--font);\n  font-size: 18px;\n  line-height: 1.5;\n`;\n\nexport const Span = styled.span`\n  color: var(--yellow);\n`;\n\nexport const Input = styled.input`\n  color: var(--blue);\n`;\n","import styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nexport default function Contacts({ contacts, onDeleteButtonClick }) {\n  return (\n    <ul>\n      {contacts.map(person => (\n        <ListItem key={person.id}>\n          {person.name} : {person.number}\n          <ButtonDelete\n            type=\"button\"\n            onClick={() => onDeleteButtonClick(person.id)}\n          >\n            Delete\n          </ButtonDelete>\n        </ListItem>\n      ))}\n    </ul>\n  );\n}\n\nContacts.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n  onDeleteButtonClick: PropTypes.func.isRequired,\n};\n\nexport const ListItem = styled.li`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  list-style: circle;\n  align-items: baseline;\n  width: 350px;\n  padding: 5px;\n\n  font-family: var(--font);\n  font-size: 18px;\n  line-height: 1.5;\n\n  ::before {\n    content: '';\n    display: block;\n    height: 7px;\n    width: 7px;\n    background-color: var(--yellow);\n    border-radius: 50%;\n  }\n`;\n\nexport const ButtonDelete = styled.button`\n  margin: 5px 0 5px 10px;\n  border: 1px solid rgb(255, 252, 252);\n  box-shadow: 0.7px 0.7px 0.75px rgb(173, 172, 172);\n  border-radius: 6px;\n  background-color: rgb(245, 250, 245);\n  padding: 3px 10px 3px 10px;\n\n  font-family: 'Roboto', sans-serif;\n  font-size: 14px;\n  font-weight: 600;\n  transition: all 250ms ease-in;\n\n  :hover {\n    cursor: pointer;\n    color: var(--white);\n    background-color: var(--blue);\n    border: 1px solid var(--dark);\n  }\n`;\n","import { nanoid } from 'nanoid';\n\nconst DataGenerator = data => {\n  return data.map(contacts => {\n    contacts.id = nanoid();\n    contacts.number =\n      Math.floor(Math.random() * (999 - 100) + 100) +\n      '-' +\n      Math.floor(Math.random() * (99 - 10) + 10) +\n      '-' +\n      Math.floor(Math.random() * (99 - 10) + 10);\n    return contacts;\n  });\n};\n\nexport default DataGenerator;\n","import React, { Fragment, useState, useMemo } from 'react';\nimport Section from './components/section';\nimport Container from './components/container';\nimport Title from './components/title';\nimport Form from './components/form';\nimport Filter from './components/filter';\nimport Contacts from './components/contacts';\nimport dataGenerator from './helpers/dataGenerator';\nimport contactsData from './data/contacts.json';\nimport { nanoid } from 'nanoid';\nimport useLocalStorage from './hooks/useLocalStorage';\n\nexport default function APP() {\n  const [contacts, setContacts] = useLocalStorage(\n    'contacts',\n    dataGenerator(contactsData),\n  );\n  const [filter, setFilter] = useState('');\n\n  const formSubmitHandler = data => {\n    const isContactValid = validateContact(data, contacts);\n    if (isContactValid) {\n      data.id = nanoid();\n      setContacts(contacts => [data, ...contacts]);\n    }\n  };\n\n  const validateContact = (data, contacts) => {\n    if (contacts.some(({ name }) => name === data.name)) {\n      alert(`${data.name} is already in contacts!`);\n      return false;\n    } else if (contacts.some(({ number }) => number === data.number)) {\n      alert(`${data.number} is already in contacts!`);\n      return false;\n    } else return true;\n  };\n\n  const deleteContact = id => {\n    setContacts(state => state.filter(contact => contact.id !== id));\n  };\n\n  const handleSearch = event => {\n    setFilter(event.currentTarget.value);\n  };\n\n  const filteredContacts = useMemo(() => {\n    const getFiltredContacts = contacts => {\n      const lowerCaseFilter = filter.toLowerCase();\n      return contacts.filter(person =>\n        person.name.toLowerCase().includes(lowerCaseFilter),\n      );\n    };\n    return getFiltredContacts(contacts);\n  }, [contacts, filter]);\n\n  return (\n    <Fragment>\n      <Form onSubmit={formSubmitHandler} />\n\n      <Section>\n        <Container>\n          <Title title=\"Contacts\" />\n          <Filter value={filter} onChange={handleSearch} />\n          <Contacts\n            contacts={filteredContacts}\n            onDeleteButtonClick={deleteContact}\n          />\n        </Container>\n      </Section>\n    </Fragment>\n  );\n}\n","import { useState, useEffect } from 'react';\r\n\r\nexport default function useLocalStorage(\r\n  key,\r\n  defaultValue,\r\n  serialize = JSON.stringify,\r\n  deserialize = JSON.parse,\r\n) {\r\n  const [state, setState] = useState(() => {\r\n    return deserialize(window.localStorage.getItem(key) ?? defaultValue);\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, serialize(state));\r\n\r\n    const localStorageArrayLength = deserialize(\r\n      window.localStorage.getItem(key).length === 0,\r\n    );\r\n\r\n    if (localStorageArrayLength) setState(defaultValue);\r\n  }, [key, defaultValue, state, serialize, deserialize]);\r\n\r\n  return [state, setState];\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}